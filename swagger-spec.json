{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "1.0",
    "title": "nestjs-chat-server"
  },
  "basePath": "/",
  "tags": [],
  "schemes": [
    "http"
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "AuthController.login",
        "description": "Login the user and returns a token",
        "parameters": [
          {
            "name": "CredentialsDTO",
            "required": true,
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/CredentialsDTO"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoginOkResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Invalid API key"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Auth v1.0"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/logout": {
      "post": {
        "summary": "AuthController.logout",
        "description": "Logouts the user and invalidate the token",
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Invalid API key"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Auth v1.0"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/users": {
      "post": {
        "summary": "UsersController.create",
        "description": "Creates the document in the collection (if it's valid)",
        "parameters": [
          {
            "name": "CreateUserDto",
            "required": true,
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/CreateUserDto"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserOkResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Invalid API key"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Users v1.0"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/posts": {
      "get": {
        "summary": "PostsController.findAll",
        "description": "Returns all the documents that matched the req.query criteria.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FindAllPostsDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Invalid API key"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Posts v1.0"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "post": {
        "summary": "PostsController.create",
        "description": "Creates the document in the collection (if it's valid)",
        "parameters": [
          {
            "name": "CreatePostDto",
            "required": true,
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/CreatePostDto"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostOkResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Invalid API key"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Posts v1.0"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/rooms": {
      "get": {
        "summary": "RoomsController.findAll",
        "description": "Returns all the documents that matched the req.query criteria.",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FindAllRoomsDto"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Invalid API key"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Rooms v1.0"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "post": {
        "summary": "RoomsController.create",
        "description": "Creates the document in the collection (if it's valid)",
        "parameters": [
          {
            "name": "CreateRoomDto",
            "required": true,
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/CreateRoomDto"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RoomOkResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Invalid API key"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Rooms v1.0"
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "CredentialsDTO": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "username"
        },
        "password": {
          "type": "string",
          "example": "test123."
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "LoginOkResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "example": {
            "token": "Bearer test"
          }
        }
      },
      "required": [
        "data"
      ]
    },
    "CreateUserDto": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Daniel"
        },
        "lastName": {
          "type": "string",
          "example": "Coello"
        },
        "username": {
          "type": "string",
          "example": "dacm26@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "test",
          "minLength": 6
        },
        "age": {
          "type": "number",
          "example": 16
        }
      },
      "required": [
        "firstName",
        "lastName",
        "username",
        "password"
      ]
    },
    "UserOkResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "example": {
            "_id": "5cc1d53f0cb74d0e6ce61fba",
            "firstName": "Daniel",
            "lastName": "Coello",
            "age": 19,
            "username": "dacm26@gmail.com",
            "password": "test",
            "isDeleted": false,
            "createdAt": "Thu Apr 25 2019 09:41:51 GMT-0600 (Central Standard Time)",
            "updatedAt": "Thu Apr 25 2019 09:41:51 GMT-0600 (Central Standard Time)"
          }
        }
      },
      "required": [
        "data"
      ]
    },
    "FindAllPostsDto": {
      "type": "object",
      "properties": {
        "currentPage": {
          "type": "number",
          "example": 1
        },
        "totalPages": {
          "type": "number",
          "example": 2
        },
        "pageSize": {
          "type": "number",
          "example": 25
        },
        "data": {
          "type": "array",
          "example": [
            {
              "_id": "5cc1d53f0cb74d0e6ce61fba",
              "content": "testing 1234",
              "userId": "123123123",
              "roomId": "123123123",
              "isDeleted": false,
              "createdAt": "Thu Apr 25 2019 09:41:51 GMT-0600 (Central Standard Time)",
              "updatedAt": "Thu Apr 25 2019 09:41:51 GMT-0600 (Central Standard Time)"
            }
          ],
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "currentPage",
        "totalPages",
        "pageSize",
        "data"
      ]
    },
    "CreatePostDto": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "example": "general"
        },
        "userId": {
          "type": "string",
          "example": "1231231234"
        },
        "roomId": {
          "type": "string",
          "example": "1231231234"
        }
      },
      "required": [
        "content",
        "userId",
        "roomId"
      ]
    },
    "PostOkResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "example": {
            "_id": "5cc1d53f0cb74d0e6ce61fba",
            "content": "testing 1234",
            "userId": "123123123",
            "roomId": "123123123",
            "isDeleted": false,
            "createdAt": "Thu Apr 25 2019 09:41:51 GMT-0600 (Central Standard Time)",
            "updatedAt": "Thu Apr 25 2019 09:41:51 GMT-0600 (Central Standard Time)"
          }
        }
      },
      "required": [
        "data"
      ]
    },
    "FindAllRoomsDto": {
      "type": "object",
      "properties": {
        "currentPage": {
          "type": "number",
          "example": 1
        },
        "totalPages": {
          "type": "number",
          "example": 2
        },
        "pageSize": {
          "type": "number",
          "example": 25
        },
        "data": {
          "type": "array",
          "example": [
            {
              "_id": "5cc1d53f0cb74d0e6ce61fba",
              "name": "general",
              "description": "test",
              "isDeleted": false,
              "createdAt": "Thu Apr 25 2019 09:41:51 GMT-0600 (Central Standard Time)",
              "updatedAt": "Thu Apr 25 2019 09:41:51 GMT-0600 (Central Standard Time)"
            }
          ],
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "currentPage",
        "totalPages",
        "pageSize",
        "data"
      ]
    },
    "CreateRoomDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "general"
        },
        "description": {
          "type": "string",
          "example": "You can post anything!"
        }
      },
      "required": [
        "name",
        "description"
      ]
    },
    "RoomOkResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "example": {
            "_id": "5cc1d53f0cb74d0e6ce61fba",
            "name": "general",
            "description": "test",
            "isDeleted": false,
            "createdAt": "Thu Apr 25 2019 09:41:51 GMT-0600 (Central Standard Time)",
            "updatedAt": "Thu Apr 25 2019 09:41:51 GMT-0600 (Central Standard Time)"
          }
        }
      },
      "required": [
        "data"
      ]
    }
  }
}